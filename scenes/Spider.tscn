[gd_scene load_steps=4 format=2]

[ext_resource path="res://icon-red.png" type="Texture" id=1]

[sub_resource type="GDScript" id=5]
script/source = "extends KinematicBody2D

export(int) var speed = 100
var velocity: Vector2 = Vector2.ZERO 

var path: Array = []
var levelNavigation: Navigation2D = null
var player = null

var attack_delay = 0.5
var is_attacking: bool = false

onready var line2d = $Line2D
onready var timer = $Timer as Timer

func _ready():
	yield(get_tree(),\"idle_frame\")
	var tree = get_tree()
	if tree.has_group(\"LevelNavigation\"):
		levelNavigation = tree.get_nodes_in_group(\"LevelNavigation\")[0]	
	if tree.has_group(\"Player\"):
		player = tree.get_nodes_in_group(\"Player\")[0]
	timer.wait_time = attack_delay
	
	
func _physics_process(delta):
	#line2d.global_position = Vector2.ZERO
	if player and levelNavigation:
		generate_path()
		navigate()
		if position.distance_to(player.position) <= 80:
			if(!is_attacking):
				timer.start()
				is_attacking = true
	move()
	pass

func navigate():
	if path.size()>0 :
		velocity = global_position.direction_to(path[1]) * speed
		if global_position == path[0]:
			path.pop_front()
	pass
	
func generate_path():
	if levelNavigation != null and player != null :
		path = levelNavigation.get_simple_path(global_position, player.global_position, false)
		#line2d.points = path
	pass

func move():
	velocity = move_and_slide(velocity)

func attack():
	print('atacando')
	# TODO: fix this horrible access
	player.hurt()

func _on_Timer_timeout():
	print('acabou o tempo')
	attack()
	is_attacking = false
"

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 27, 28 )

[node name="Spider" type="KinematicBody2D"]
script = SubResource( 5 )

[node name="Sprite" type="Sprite" parent="."]
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="Line2D" type="Line2D" parent="."]

[node name="Timer" type="Timer" parent="."]
wait_time = 2.0
one_shot = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
